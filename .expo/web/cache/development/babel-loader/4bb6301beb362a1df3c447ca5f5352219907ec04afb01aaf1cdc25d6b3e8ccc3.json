{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport { db, auth } from \"../../firebase/config\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PostForm = function (_Component) {\n  _inherits(PostForm, _Component);\n  var _super = _createSuper(PostForm);\n  function PostForm() {\n    var _this;\n    _classCallCheck(this, PostForm);\n    _this = _super.call(this);\n    _this.state = {\n      textoPost: ''\n    };\n    return _this;\n  }\n  _createClass(PostForm, [{\n    key: \"crearPost\",\n    value: function crearPost(owner, textoPost, createdAt) {\n      db.collection('posts').add({\n        owner: owner,\n        textoPost: textoPost,\n        createdAt: createdAt\n      }).then(function (res) {\n        return console.log(res);\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Text, {\n          children: \"New Post\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              textoPost: text\n            });\n          },\n          placeholder: \"Escribir...\",\n          keyboardType: \"default\",\n          value: this.state.textoPost\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return _this2.crearPost(auth.currentUser.email, _this2.state.textoPost, Date.now());\n          },\n          children: _jsx(Text, {\n            style: styles.textButton,\n            children: \"Postear\"\n          })\n        })]\n      });\n    }\n  }]);\n  return PostForm;\n}(Component);\nvar styles = StyleSheet.create({\n  formContainer: {\n    paddingHorizontal: 10,\n    marginTop: 20\n  },\n  input: {\n    height: 20,\n    paddingVertical: 15,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderStyle: 'solid',\n    borderRadius: 6,\n    marginVertical: 10\n  },\n  button: {\n    backgroundColor: '#28a745',\n    paddingHorizontal: 10,\n    paddingVertical: 6,\n    textAlign: 'center',\n    borderRadius: 4,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#28a745'\n  },\n  textButton: {\n    color: '#fff'\n  }\n});\nexport default PostForm;","map":{"version":3,"names":["React","Component","db","auth","TextInput","TouchableOpacity","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","PostForm","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","textoPost","_createClass","key","value","crearPost","owner","createdAt","collection","add","then","res","console","log","catch","e","render","_this2","style","styles","formContainer","children","input","onChangeText","text","setState","placeholder","keyboardType","button","onPress","currentUser","email","Date","now","textButton","create","paddingHorizontal","marginTop","height","paddingVertical","borderWidth","borderColor","borderStyle","borderRadius","marginVertical","backgroundColor","textAlign","color"],"sources":["/Users/delfinarawson/Prog3Final/src/screens/PostForm/PostForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {db, auth } from '../../firebase/config';\nimport {TextInput, TouchableOpacity, View, Text, StyleSheet} from 'react-native';\n\nclass PostForm extends Component {\n    constructor(){\n        super()\n        this.state={\n           textoPost:'',\n        }\n    }\n\n    //1)Completar la creación de posts\n    crearPost(owner, textoPost, createdAt){\n        //Crear la colección Users\n        db.collection('posts').add({\n            owner: owner, //auth.currentUser.email,\n            textoPost: textoPost, //this.state.textoPost,\n            createdAt: createdAt //Date.now(), \n            \n        })\n        .then( res => console.log(res))\n        .catch( e => console.log(e))\n    }\n\n\n    render(){\n        return(\n            <View style={styles.formContainer}>\n                <Text>New Post</Text>\n                <TextInput\n                    style={styles.input}\n                    onChangeText={(text)=>this.setState({textoPost: text})}\n                    placeholder='Escribir...'\n                    keyboardType='default'\n                    value={this.state.textoPost}\n                    />\n                <TouchableOpacity style={styles.button} onPress={()=>this.crearPost(auth.currentUser.email, this.state.textoPost, Date.now())}>\n                    <Text style={styles.textButton}>Postear</Text>    \n                </TouchableOpacity>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    formContainer:{\n        paddingHorizontal:10,\n        marginTop: 20,\n    },\n    input:{\n        height:20,\n        paddingVertical:15,\n        paddingHorizontal: 10,\n        borderWidth:1,\n        borderColor: '#ccc',\n        borderStyle: 'solid',\n        borderRadius: 6,\n        marginVertical:10,\n    },\n    button:{\n        backgroundColor:'#28a745',\n        paddingHorizontal: 10,\n        paddingVertical: 6,\n        textAlign: 'center',\n        borderRadius:4, \n        borderWidth:1,\n        borderStyle: 'solid',\n        borderColor: '#28a745'\n    },\n    textButton:{\n        color: '#fff'\n    }\n\n})\n\n\nexport default PostForm;"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAAQC,EAAE,EAAEC,IAAI;AAAgC,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,IAG1CC,QAAQ,aAAAC,UAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,QAAA;EACV,SAAAA,SAAA,EAAa;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,QAAA;IACTK,KAAA,GAAAF,MAAA,CAAAI,IAAA;IACAF,KAAA,CAAKG,KAAK,GAAC;MACRC,SAAS,EAAC;IACb,CAAC;IAAA,OAAAJ,KAAA;EACL;EAACK,YAAA,CAAAV,QAAA;IAAAW,GAAA;IAAAC,KAAA,EAGD,SAAAC,UAAUC,KAAK,EAAEL,SAAS,EAAEM,SAAS,EAAC;MAElC1B,EAAE,CAAC2B,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAAC;QACvBH,KAAK,EAAEA,KAAK;QACZL,SAAS,EAAEA,SAAS;QACpBM,SAAS,EAAEA;MAEf,CAAC,CAAC,CACDG,IAAI,CAAE,UAAAC,GAAG;QAAA,OAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAA,EAAC,CAC9BG,KAAK,CAAE,UAAAC,CAAC;QAAA,OAAIH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAAA,EAAC;IAChC;EAAC;IAAAZ,GAAA;IAAAC,KAAA,EAGD,SAAAY,OAAA,EAAQ;MAAA,IAAAC,MAAA;MACJ,OACI1B,KAAA,CAACN,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACC,aAAc;QAAAC,QAAA,GAC9BhC,IAAA,CAACH,IAAI;UAAAmC,QAAA,EAAC;QAAQ,CAAM,CAAC,EACrBhC,IAAA,CAACN,SAAS;UACNmC,KAAK,EAAEC,MAAM,CAACG,KAAM;UACpBC,YAAY,EAAE,SAAAA,aAACC,IAAI;YAAA,OAAGP,MAAI,CAACQ,QAAQ,CAAC;cAACxB,SAAS,EAAEuB;YAAI,CAAC,CAAC;UAAA,CAAC;UACvDE,WAAW,EAAC,aAAa;UACzBC,YAAY,EAAC,SAAS;UACtBvB,KAAK,EAAE,IAAI,CAACJ,KAAK,CAACC;QAAU,CAC3B,CAAC,EACNZ,IAAA,CAACL,gBAAgB;UAACkC,KAAK,EAAEC,MAAM,CAACS,MAAO;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAIZ,MAAI,CAACZ,SAAS,CAACvB,IAAI,CAACgD,WAAW,CAACC,KAAK,EAAEd,MAAI,CAACjB,KAAK,CAACC,SAAS,EAAE+B,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;UAAA,CAAC;UAAAZ,QAAA,EAC1HhC,IAAA,CAACH,IAAI;YAACgC,KAAK,EAAEC,MAAM,CAACe,UAAW;YAAAb,QAAA,EAAC;UAAO,CAAM;QAAC,CAChC,CAAC;MAAA,CACjB,CAAC;IAEf;EAAC;EAAA,OAAA7B,QAAA;AAAA,EAtCkBZ,SAAS;AAyChC,IAAMuC,MAAM,GAAGhC,UAAU,CAACgD,MAAM,CAAC;EAC7Bf,aAAa,EAAC;IACVgB,iBAAiB,EAAC,EAAE;IACpBC,SAAS,EAAE;EACf,CAAC;EACDf,KAAK,EAAC;IACFgB,MAAM,EAAC,EAAE;IACTC,eAAe,EAAC,EAAE;IAClBH,iBAAiB,EAAE,EAAE;IACrBI,WAAW,EAAC,CAAC;IACbC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,OAAO;IACpBC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAC;EACnB,CAAC;EACDhB,MAAM,EAAC;IACHiB,eAAe,EAAC,SAAS;IACzBT,iBAAiB,EAAE,EAAE;IACrBG,eAAe,EAAE,CAAC;IAClBO,SAAS,EAAE,QAAQ;IACnBH,YAAY,EAAC,CAAC;IACdH,WAAW,EAAC,CAAC;IACbE,WAAW,EAAE,OAAO;IACpBD,WAAW,EAAE;EACjB,CAAC;EACDP,UAAU,EAAC;IACPa,KAAK,EAAE;EACX;AAEJ,CAAC,CAAC;AAGF,eAAevD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}